#!/usr/bin/env python
#based on http://arxiv.org/pdf/0906.0396.pdf
# or http://arxiv.org/pdf/gr-qc/9711068v2.pdf
#Scalar Field potential V=V0*exp[-lam*\phi]

from RunBase import *
from scipy import *
import numpy as np
from matplotlib import pyplot as plt
from scipy.integrate import odeint
from scipy.interpolate import interp1d
import pylab

T=QuintCosmology()

if False:

 #T=QuintCosmology()
 T2=LCDMCosmology()

 zCMASS = 0.57
 zLyaA  = 2.34
 zLyaC  = 2.36

 pylab.figure(figsize=(8,8))
 pylab.errorbar(zCMASS,20.75*sqrt(zCMASS), yerr=0.73,color ='red', fmt='-o')
 pylab.errorbar(zLyaA, 9.18*sqrt(zLyaA),  yerr=0.28*zLyaA,color ='blue', fmt='-o')
 pylab.errorbar(zLyaC, 9.0*sqrt(zLyaC),   yerr=0.3*zLyaC,color ='magenta', fmt='-o')


 zl= arange(0.01, 3.0 ,0.05)

 lam_=lam_par
 B_=B_par
 
 lam_.setValue(6)
 B_.setValue(1) 
 T.updateParams([lam_])
 y1=[T.HIOverrd(z)*sqrt(z) for z in zl]

 lam_.setValue(6)
 B_.setValue(5) 
 T.updateParams([lam_])
 y2=[T.HIOverrd(z)*sqrt(z) for z in zl]

 lam_.setValue(6)
 B_.setValue(10)
 T.updateParams([lam_])
 y3=[T.HIOverrd(z)*sqrt(z) for z in zl]

 y4=[T2.HIOverrd(z)*sqrt(z) for z in zl]
 
 pylab.plot(zl,y4,'g-', label="LCDM")
 pylab.plot(zl,y1,'r-', label="$\lambda = 0.1$")
 pylab.plot(zl,y2,'k-',label="$\lambda  = 0.5$")
 pylab.plot(zl,y3,'b-',label="$\lambda  = 1.0$")
 pylab.legend(loc="lower left")

 plt.ylabel("D_H")
 plt.xlabel("$z$")

 pylab.show()


if True:
  #llna=arange(-15,0,0.1)
  sol = T.Ini_phi() 
  #sol=T.solver(0.0)  
  h_=h_par
  Obh2_=Obh2_par
  Om_=Om_par
 
  h_.setValue(0.64)
  Obh2_.setValue(0.0225)
  Om_.setValue(0.33)

  T.updateParams([h_, Obh2_, Om_])
  xx, yy = sol.T
 
  H_0=0.64
  Om0=0.33
  Or0= Om0*1E-4
  Cte=sqrt(3.0)*H_0 
  fig = plt.figure(figsize=(12,4))
  ax=fig.add_subplot(1,2,1)
  lna = np.linspace(-15.5, 0, 200)
  #print llna, T.RHSquared_a(exp(llna))
  #ax.plot(llna, T.RHSquared_a(exp(llna))) 
  #ax.plot(llna, T.RHSquared_a2(exp(llna)))
  #print llna #, T.RHSquared_a(exp(llna))
  ax.plot(lna, (0.5*yy**2+T.Pot(xx,0)/Cte**2)*(1.0/T.hub((lna), sol.T))**2, 'k-',label = "$\Omega_{\phi}$")
  ax.plot(lna, Om0/(exp(lna)**3)*(1.0/T.hub((lna), sol.T))**2, 'b--', label = "$\Omega_{dm}$")
  ax.plot(lna, Or0/(exp(lna)**4)*(1.0/T.hub((lna), sol.T))**2, 'r--', label = "$\Omega_r$")
  ax.legend(loc="upper left")
  ylabel("$\\Omega$")
  xlabel("$\ln a$")
  #ax.set_yscale('log')

  
  ax2=fig.add_subplot(1,2,2)
  #ax2.plot(lna, xx, 'k-')
  ax2.plot(lna, (0.5*yy**2*Cte**2-T.Pot(xx,0))/(0.5*yy**2*Cte**2+T.Pot(xx,0)), 'k-')
  ylabel("$w$")
  xlabel("$\ln a$")
  plt.show()

